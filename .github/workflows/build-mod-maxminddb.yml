name: build-mod-maxminddb (Windows MSVC x64)

on:
  workflow_dispatch:
    inputs:
      apache_zip_url:
        description: "Apache Lounge VC17 x64 ZIP URL (default: httpd-2.4.65-250724-Win64-VS17.zip)"
        required: false
        type: string
      libmaxminddb_tag:
        description: "libmaxminddb tag or ref"
        required: false
        default: "1.12.2"
        type: string
  push:
    branches: [ main, master ]
    tags:
      - 'v*'

# Least-privilege defaults (zizmor-friendly)
permissions:
  contents: read

env:
  APACHE_ZIP_URL: ${{ github.event.inputs.apache_zip_url || vars.APACHE_ZIP_URL || secrets.APACHE_ZIP_URL || 'https://www.apachelounge.com/download/VS17/binaries/httpd-2.4.65-250724-Win64-VS17.zip' }}

jobs:
  build-lib:
    name: Build libmaxminddb (VC17 x64)
    runs-on: windows-latest
    permissions:
      contents: read
    env:
      BUILD_TYPE: Release
      CMAKE_GEN: Visual Studio 17 2022
      ARCH: x64
    steps:
      - name: Checkout (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Fetch libmaxminddb source
        run: |
          git clone https://github.com/maxmind/libmaxminddb.git
          cd libmaxminddb
          git checkout "${{ github.event.inputs.libmaxminddb_tag || '1.12.2' }}"

      - name: Configure libmaxminddb (DLL)
        run: >
          cmake -S libmaxminddb -B libmaxminddb\build
          -G "${{ env.CMAKE_GEN }}" -A ${{ env.ARCH }}
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DBUILD_SHARED_LIBS=ON
          -DBUILD_TESTING=OFF
          -DMMDB_BUILD_TESTS=OFF
          -DMAXMINDDB_BUILD_BINARIES=OFF
          -DMAXMINDDB_INSTALL=OFF

      - name: Build libmaxminddb
        run: cmake --build libmaxminddb\build --config ${{ env.BUILD_TYPE }} --verbose

      - name: Upload lib artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libmaxminddb-msvc-${{ env.BUILD_TYPE }}-${{ env.ARCH }}
          path: |
            libmaxminddb/build/Release/maxminddb.dll
            libmaxminddb/build/Release/maxminddb.lib
            libmaxminddb/include/**
            libmaxminddb/build/include/**

  build-module:
    name: Build mod_maxminddb (VC17 x64)
    needs: build-lib
    runs-on: windows-latest
    permissions:
      contents: read
    env:
      BUILD_TYPE: Release
      CMAKE_GEN: Visual Studio 17 2022
      ARCH: x64
      APACHE_DIR: C:\Apache24
    steps:
      - name: Checkout module repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Download libmaxminddb artifacts
        uses: actions/download-artifact@v4
        with:
          name: libmaxminddb-msvc-Release-x64
          path: libmaxminddb-art

      - name: Lay out libmaxminddb include/lib (robust)
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"

          New-Item -Force -ItemType Directory -Path "deps\libmaxminddb\include" | Out-Null
          New-Item -Force -ItemType Directory -Path "deps\libmaxminddb\lib" | Out-Null

          # Find files regardless of artifact subpaths
          $dll = Get-ChildItem -Recurse -Path "libmaxminddb-art" -Filter "maxminddb.dll" | Select-Object -First 1
          $lib = Get-ChildItem -Recurse -Path "libmaxminddb-art" -Filter "maxminddb.lib" | Select-Object -First 1

          # Prefer the canonical include path; fall back to any 'include' dir
          $inc = Get-Item "libmaxminddb-art\libmaxminddb\include" -ErrorAction SilentlyContinue
          if (-not $inc) {
            $inc = Get-ChildItem -Recurse -Path "libmaxminddb-art" -Directory -Filter "include" | Select-Object -First 1
          }

          $buildInc = Get-Item "libmaxminddb-art\libmaxminddb\build\include" -ErrorAction SilentlyContinue
          if (-not $buildInc) {
            $buildInc = Get-ChildItem -Recurse -Path "libmaxminddb-art" -Directory -Filter "include" |
              Where-Object { $_.FullName -match "build" } |
              Select-Object -First 1
          }

          if (-not $dll -or -not $lib -or -not $inc) {
            Write-Host "Artifact tree for debugging:"
            Get-ChildItem -Recurse -Path "libmaxminddb-art" | Select-Object FullName
            throw ("Missing built artifacts: dll={0} lib={1} include={2}" -f ($dll -ne $null), ($lib -ne $null), ($inc -ne $null))
          }

          # Copy files with explicit destinations; use -LiteralPath for file paths
          Copy-Item -LiteralPath $dll.FullName -Destination "deps\libmaxminddb" -Force
          Copy-Item -LiteralPath $lib.FullName -Destination "deps\libmaxminddb\lib" -Force

          # Copy include tree (avoid positional parsing issues)
          $incGlob = Join-Path $inc.FullName '*'
          Copy-Item -Path $incGlob -Destination "deps\libmaxminddb\include" -Recurse -Force

          if ($buildInc) {
            $buildIncGlob = Join-Path $buildInc.FullName '*'
            Copy-Item -Path $buildIncGlob -Destination "deps\libmaxminddb\include" -Recurse -Force
          }

          if (-not (Test-Path "deps\libmaxminddb\include\maxminddb_config.h")) {
            throw "Expected maxminddb_config.h in deps\\libmaxminddb\\include."
          }

      - name: Download & extract Apache Lounge (VC17 x64)
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $url = $env:APACHE_ZIP_URL
          if (-not $url) {
            throw "APACHE_ZIP_URL is required; set workflow input, repository variable, or secret."
          }

          Write-Host "Using Apache ZIP URL: $url"

          $session = New-Object Microsoft.PowerShell.Commands.WebRequestSession
          $headers = @{
            'User-Agent' = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0 Safari/537.36'
            'Accept' = 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
            'Accept-Language' = 'en-US,en;q=0.9'
            'Referer' = 'https://www.apachelounge.com/download/VS17/'
          }

          # Prime the session so Apache Lounge issues a real download instead of hotlink redirect.
          Invoke-WebRequest -Uri 'https://www.apachelounge.com/download/VS17/' -WebSession $session -Headers $headers -MaximumRedirection 5 -AllowInsecureRedirect | Out-Null

          Invoke-WebRequest -Uri $url -OutFile apache.zip -WebSession $session -Headers $headers -MaximumRedirection 5 -AllowInsecureRedirect
          Expand-Archive -LiteralPath apache.zip -DestinationPath $env:RUNNER_TEMP\apache | Out-Null
          $root = Get-ChildItem $env:RUNNER_TEMP\apache | Where-Object { $_.PSIsContainer } | Select-Object -First 1
          if (-not $root) { throw "Could not find extracted Apache root." }
          Move-Item $root.FullName $env:APACHE_DIR -Force

      - name: Generate CMakeLists.txt (on-the-fly)
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          New-Item -ItemType Directory -Force -Path "win-cmake" | Out-Null

          @'
          cmake_minimum_required(VERSION 3.20)
          project(mod_maxminddb_windows C)

          if(NOT DEFINED APACHE_ROOT)
            set(APACHE_ROOT "C:/Apache24")
          endif()
          set(APACHE_INCLUDE "${APACHE_ROOT}/include")
          set(APACHE_LIBDIR "${APACHE_ROOT}/lib")

          set(PROJECT_ROOT "${CMAKE_SOURCE_DIR}/..")
          include_directories(${APACHE_INCLUDE})
          link_directories(${APACHE_LIBDIR})

          set(LMMDB_ROOT "${PROJECT_ROOT}/deps/libmaxminddb")
          include_directories("${LMMDB_ROOT}/include")

          file(GLOB SRC "${PROJECT_ROOT}/src/*.c")
          add_library(mod_maxminddb MODULE ${SRC})
          set_target_properties(mod_maxminddb PROPERTIES PREFIX "" SUFFIX ".so")
          target_compile_definitions(mod_maxminddb PRIVATE WIN32 _WINDOWS NDEBUG)
          target_include_directories(mod_maxminddb PRIVATE ${APACHE_INCLUDE} "${LMMDB_ROOT}/include")

          target_link_libraries(mod_maxminddb
            "${LMMDB_ROOT}/lib/maxminddb.lib"
            httpd.lib
            libapr-1.lib
            libaprutil-1.lib
          )

          add_custom_command(TARGET mod_maxminddb POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
              "${LMMDB_ROOT}/maxminddb.dll"
              "$<TARGET_FILE_DIR:mod_maxminddb>/maxminddb.dll"
          )
          '@ | Set-Content -Path win-cmake/CMakeLists.txt

      - name: Configure module (CMake)
        run: >
          cmake -S win-cmake -B build
          -G "${{ env.CMAKE_GEN }}" -A ${{ env.ARCH }}
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DAPACHE_ROOT=${{ env.APACHE_DIR }}

      - name: Build module
        run: cmake --build build --config ${{ env.BUILD_TYPE }} --verbose

      - name: Collect module artifacts
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          New-Item -Force -ItemType Directory -Path "artifacts" | Out-Null
          Copy-Item "build\${{ env.BUILD_TYPE }}\mod_maxminddb.so" "artifacts\"
          Copy-Item "deps\libmaxminddb\maxminddb.dll" "artifacts\"
          @"
          Files:
           - mod_maxminddb.so -> copy to C:\Apache24\modules\
           - maxminddb.dll    -> copy to C:\Apache24\bin\

          Apache config:
           LoadModule maxminddb_module modules/mod_maxminddb.so
          "@ | Set-Content "artifacts\README-WINDOWS.txt"

      - name: Upload module artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mod_maxminddb-msvc-${{ env.BUILD_TYPE }}-${{ env.ARCH }}
          path: artifacts/**

  release:
    name: Create GitHub Release (on tag)
    needs: [build-module]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts (module)
        uses: actions/download-artifact@v4
        with:
          name: mod_maxminddb-msvc-Release-x64
          path: artifacts

      - name: Sanitize tag & zip artifacts
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $tag = $env:GITHUB_REF_NAME
          # allow only alnum, dash, underscore, dot
          $safe = -join ($tag.ToCharArray() | ForEach-Object { if ($_ -match '[A-Za-z0-9._-]') { $_ } else { '-' } })
          $zipPath = "mod_maxminddb-windows-msvc-x64-$safe.zip"
          Compress-Archive -Path "artifacts\*" -DestinationPath $zipPath
          echo "ZIP_PATH=$zipPath" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "TAG_SAFE=$safe" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Publish GitHub release via gh
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "$env:TAG_SAFE" --notes "Automated build for $env:TAG_SAFE" -t "$env:TAG_SAFE" 2>$null || $true
          gh release upload "$env:TAG_SAFE" "$env:ZIP_PATH" --clobber
